# readlines():按照行的方式把文件内容一次性读取，返回的是一个列表，每一行的数据就是列表中的一个元素
# 访问模式
# r：只读模式(默认模式)，文件必须存在，不存在就会报错
# w:只写模式，文件存在就会先清空文件内容，再写入添加内容，不存在就会创建文件

# f = open('py801','w')
# print(f.read())
# f.write('...')#重新编辑文件内容，原有内容会被覆盖
# f.close()
# +：表示可以同时读写某个文件
# 使用+会影响文件的读写效率，开发过程中更多时候会以只读，只写的方式来操作文件
# r+；可读写文件，文件不存在就会报错
# w+：先写再读，文件存在就重新编辑文件，不存在就创建新文件
# f = open('py8','r+')
# f.write('hhh')
# print(f.read())
# f.close()
# f = open('py801','w+')
# f.write('hhh')
# f.close()
# a:追加模式，不存在就创建新文件进行写入，存在就在原有内容的基础上追加新的内容
# f = open('py8','a')
# f.write('guiguihhh')
# print(f.read())
# f.close()
# 文件指针：标记从哪个位置开始读取数据
# 文件定位操作
# tell()和seek()
# tell():显示文件内当前位置，即文件指针当前位置
# seek(offset,whence):移动文件读取指针到指定位置
# offset：偏移量，表示要移动的字节数
# whence：起始位置，表示移动字节的参考位置，默认是0，0表示文件开头作为参考位置，1代表当前位置作为参考位置，2表示将文件结尾作为参考位置
# seek(0,0)就会把文件指针移到文件开头
f = open('py801','w+')
f.write('hello python')
pos = f.tell()
print('移动前:',pos)#移动前: 12——文件长度
f.seek(0,0)
pos1 = f.tell()
print('移动后：',pos1)
print(f.read())
f.close()