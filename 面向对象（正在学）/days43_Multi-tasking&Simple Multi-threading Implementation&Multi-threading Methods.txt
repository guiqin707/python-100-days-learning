# 1.多任务：多个任务同时执行
# 多线程：同时运行多个线程
# 2.1线程和进程
# 进程：是操作系统进行资源分配的基本单位，每打开一个程序至少就会有有一个进程
# 线程：是CPU调度的基本单位，每一个进程至少都会有一个线程，这个线程通常就是我们所说的主线程
# 一个进程默认有一个线程，进程里面可以创建多个线程，线程是依附在进程里面的，没有进程就没有线程。
# 2.2多线程
# 导入线程模块
# import threading
# Thread线程类参数
# target：执行的任务名
# args:以元组的形式给任务传参
# kwargs:以字典的形式给任务传参
import time
import threading
def study(name):
    print(f'{name}在学习py')
    time.sleep(2)
    print(f'{name}还在学习')
def dance(name):
    print(f'{name}去跳舞')
    time.sleep(2)
    print(f'{name}跳完回来学习py')
#程序入口
if __name__ == '__main__':#判断是否直接运行当前文件
#     1.创建子线程
    te = threading.Thread(target=study,args = ('guigui',))#以元组的形式传参的时候，不用忘记“，”
    print(te)
    te1 = threading.Thread(target=dance,kwargs = {'name':'guigui'})#以字典的形式传参
# 3.守护线程，必须放在start()前面：主线程执行结束,子线程也会跟着结束
    te.daemon = True
    te1.daemon = True
# 2.开启子线程
    te.start()
    te1.start()
    # 4.阻塞主线程join():暂停的作用，等子线程执行结束后，主线程才回继续执行，必须放在start()后面
    te.join()
    te1.join()
    # 5.获取线程名字
    print(te.name)
    print(te1.name)
    # 6.更改线程名字
    te.name = "子线程1"
    te1.name = "子线程2"
    print(te1.name)
    print(te1.name)
    print('又在学习py的一天')
# 多任务是"多个程序同时运行"，多线程是"一个程序内多件事同时进行"。